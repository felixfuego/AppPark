@page "/users"
@using Park.Front.Services
@using Park.Comun.DTOs
@using Park.Front.Components
@inject UserService UserService
@inject ColaboradorService ColaboradorService
@inject IJSRuntime JSRuntime

<PageTitle>Gestión de Usuarios - Park.Front</PageTitle>

<RoleGuard RequiredRole="Admin">

<div class="users-container management-page">
    <div class="page-header">
        <div class="page-title">
            <h1>Gestión de Usuarios</h1>
            <p>Administra los usuarios del sistema</p>
        </div>
        <div class="page-actions">
            <button class="btn btn-primary" @onclick="ShowCreateModal">
                <i class="bi bi-plus-circle"></i>
                Nuevo Usuario
            </button>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="loading-container">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-3">Cargando usuarios...</p>
        </div>
    }
    else
    {
        <div class="users-table-container">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Usuario</th>
                            <th>Email</th>
                            <th>Nombre Completo</th>
                            <th>Colaborador Asignado</th>
                            <th>Empresa</th>
                            <th>Roles</th>
                            <th>Estado</th>
                            <th>Último Login</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in users)
                        {
                            <tr>
                                <td>
                                    <div class="user-info">
                                        <strong>@user.Username</strong>
                                    </div>
                                </td>
                                <td>@user.Email</td>
                                <td>@user.FullName</td>
                                <td>
                                    @if (user.Colaborador != null)
                                    {
                                        <div class="colaborador-info">
                                            <strong>@user.Colaborador.Nombre</strong>
                                            <br>
                                            <small class="text-muted">@user.Colaborador.Puesto</small>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Sin asignar</span>
                                    }
                                </td>
                                <td>
                                    @if (user.Colaborador?.Compania != null)
                                    {
                                        <span class="badge bg-info">@user.Colaborador.Compania.Name</span>
                                    }
                                    else if (user.Compania != null)
                                    {
                                        <span class="badge bg-info">@user.Compania.Name</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Sin empresa</span>
                                    }
                                </td>
                                <td>
                                    <div class="roles-container">
                                        @foreach (var role in user.Roles)
                                        {
                                            <span class="badge bg-primary">@role.Name</span>
                                        }
                                    </div>
                                </td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="badge bg-success">Activo</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactivo</span>
                                    }
                                    @if (user.IsLocked)
                                    {
                                        <span class="badge bg-warning">Bloqueado</span>
                                    }
                                </td>
                                <td>
                                    @if (user.LastLogin.HasValue)
                                    {
                                        <span>@user.LastLogin.Value.ToString("dd/MM/yyyy HH:mm")</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Nunca</span>
                                    }
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <button class="btn btn-sm btn-outline-info" @onclick="() => ShowViewModal(user)" title="Ver Detalles">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-primary" @onclick="() => ShowEditModal(user)" title="Editar">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        @if (user.Colaborador != null)
                                        {
                                            <button class="btn btn-sm btn-outline-warning" @onclick="() => RemoveColaboradorFromUser(user.Id)" title="Remover Colaborador">
                                                <i class="bi bi-person-dash"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-sm btn-outline-success" @onclick="() => ShowAssignColaboradorModal(user)" title="Asignar Colaborador">
                                                <i class="bi bi-person-plus"></i>
                                            </button>
                                        }
                                        @if (user.IsLocked)
                                        {
                                            <button class="btn btn-sm btn-outline-success" @onclick="() => UnlockUser(user.Id)" title="Desbloquear">
                                                <i class="bi bi-unlock"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-sm btn-outline-warning" @onclick="() => LockUser(user.Id)" title="Bloquear">
                                                <i class="bi bi-lock"></i>
                                            </button>
                                        }
                                        <button class="btn btn-sm btn-outline-info" @onclick="() => ShowChangePasswordModal(user)" title="Cambiar Contraseña">
                                            <i class="bi bi-key"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteUser(user.Id)" title="Eliminar">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<!-- Modal para crear/editar usuario -->
@if (showModal)
{
    <div class="modal-backdrop show" @onclick="HideModal"></div>
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@(isEditing ? "Editar Usuario" : "Nuevo Usuario")</h5>
                    <button type="button" class="btn-close" @onclick="HideModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@(isEditing ? currentEditUser : currentUser)" OnValidSubmit="@HandleSave">
                        <DataAnnotationsValidator />
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="username">Nombre de Usuario</label>
                                    @if (isEditing)
                                    {
                                        <InputText id="username" @bind-Value="currentEditUser.Username" class="form-control" />
                                        <ValidationMessage For="@(() => currentEditUser.Username)" class="text-danger" />
                                    }
                                    else
                                    {
                                        <InputText id="username" @bind-Value="currentUser.Username" class="form-control" />
                                        <ValidationMessage For="@(() => currentUser.Username)" class="text-danger" />
                                    }
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    @if (isEditing)
                                    {
                                        <InputText id="email" @bind-Value="currentEditUser.Email" type="email" class="form-control" />
                                        <ValidationMessage For="@(() => currentEditUser.Email)" class="text-danger" />
                                    }
                                    else
                                    {
                                        <InputText id="email" @bind-Value="currentUser.Email" type="email" class="form-control" />
                                        <ValidationMessage For="@(() => currentUser.Email)" class="text-danger" />
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="firstName">Nombre</label>
                                    @if (isEditing)
                                    {
                                        <InputText id="firstName" @bind-Value="currentEditUser.FirstName" class="form-control" />
                                        <ValidationMessage For="@(() => currentEditUser.FirstName)" class="text-danger" />
                                    }
                                    else
                                    {
                                        <InputText id="firstName" @bind-Value="currentUser.FirstName" class="form-control" />
                                        <ValidationMessage For="@(() => currentUser.FirstName)" class="text-danger" />
                                    }
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="lastName">Apellido</label>
                                    @if (isEditing)
                                    {
                                        <InputText id="lastName" @bind-Value="currentEditUser.LastName" class="form-control" />
                                        <ValidationMessage For="@(() => currentEditUser.LastName)" class="text-danger" />
                                    }
                                    else
                                    {
                                        <InputText id="lastName" @bind-Value="currentUser.LastName" class="form-control" />
                                        <ValidationMessage For="@(() => currentUser.LastName)" class="text-danger" />
                                    }
                                </div>
                            </div>
                        </div>

                        @if (!isEditing)
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="password">Contraseña</label>
                                        <InputText id="password" @bind-Value="currentUser.Password" type="password" class="form-control" />
                                        <ValidationMessage For="@(() => currentUser.Password)" class="text-danger" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="confirmPassword">Confirmar Contraseña</label>
                                        <InputText id="confirmPassword" @bind-Value="currentUser.ConfirmPassword" type="password" class="form-control" />
                                        <ValidationMessage For="@(() => currentUser.ConfirmPassword)" class="text-danger" />
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <label>Roles</label>
                            <div class="roles-selection">
                                @foreach (var role in availableRoles)
                                {
                                    var roleId = $"role-{role.Id}";
                                    var isSelected = selectedRoleIds.Contains(role.Id);
                                    <div class="form-check">
                                        <input type="checkbox" 
                                               id="@roleId" 
                                               class="form-check-input" 
                                               checked="@isSelected"
                                               @onchange="@((e) => ToggleRole(role.Id, (bool)e.Value!))" />
                                        <label for="@roleId" class="form-check-label">@role.Name</label>
                                    </div>
                                }
                            </div>
                        </div>

                        @if (!isEditing)
                        {
                            <div class="form-group">
                                <div class="form-check">
                                    <InputCheckbox id="isActiveCreate" @bind-Value="currentUser.IsActive" class="form-check-input" />
                                    <label for="isActiveCreate" class="form-check-label">Usuario Activo</label>
                                </div>
                            </div>
                        }

                        @if (isEditing)
                        {
                            <div class="form-group">
                                <div class="form-check">
                                    <InputCheckbox id="isActive" @bind-Value="currentEditUser.IsActive" class="form-check-input" />
                                    <label for="isActive" class="form-check-label">Usuario Activo</label>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                @errorMessage
                            </div>
                        }

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="HideModal">Cancelar</button>
                            <button type="submit" class="btn btn-primary" disabled="@isSaving">
                                @if (isSaving)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                }
                                @(isEditing ? "Actualizar" : "Crear")
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<!-- Modal para cambiar contraseña -->
@if (showPasswordModal)
{
    <div class="modal-backdrop show" @onclick="HidePasswordModal"></div>
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Cambiar Contraseña</h5>
                    <button type="button" class="btn-close" @onclick="HidePasswordModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@changePasswordModel" OnValidSubmit="@HandleChangePassword">
                        <DataAnnotationsValidator />
                        
                        <div class="form-group">
                            <label for="currentPassword">Contraseña Actual</label>
                            <InputText id="currentPassword" @bind-Value="changePasswordModel.CurrentPassword" type="password" class="form-control" />
                            <ValidationMessage For="@(() => changePasswordModel.CurrentPassword)" class="text-danger" />
                        </div>

                        <div class="form-group">
                            <label for="newPassword">Nueva Contraseña</label>
                            <InputText id="newPassword" @bind-Value="changePasswordModel.NewPassword" type="password" class="form-control" />
                            <ValidationMessage For="@(() => changePasswordModel.NewPassword)" class="text-danger" />
                        </div>

                        <div class="form-group">
                            <label for="confirmNewPassword">Confirmar Nueva Contraseña</label>
                            <InputText id="confirmNewPassword" @bind-Value="changePasswordModel.ConfirmNewPassword" type="password" class="form-control" />
                            <ValidationMessage For="@(() => changePasswordModel.ConfirmNewPassword)" class="text-danger" />
                        </div>

                        @if (!string.IsNullOrEmpty(passwordErrorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                @passwordErrorMessage
                            </div>
                        }

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="HidePasswordModal">Cancelar</button>
                            <button type="submit" class="btn btn-primary" disabled="@isChangingPassword">
                                @if (isChangingPassword)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                }
                                Cambiar Contraseña
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<!-- Modal para asignar colaborador -->
@if (showAssignColaboradorModal)
{
    <div class="modal-backdrop show" @onclick="HideAssignColaboradorModal"></div>
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Asignar Colaborador a Usuario</h5>
                    <button type="button" class="btn-close" @onclick="HideAssignColaboradorModal"></button>
                </div>
                <div class="modal-body">
                    @if (selectedUserForColaborador != null)
                    {
                        <div class="mb-3">
                            <label class="form-label fw-bold">Usuario:</label>
                            <p class="form-control-plaintext">@selectedUserForColaborador.Username - @selectedUserForColaborador.FullName</p>
                        </div>
                        
                        <div class="mb-3">
                            <label for="colaboradorSelect" class="form-label fw-bold">Seleccionar Colaborador:</label>
                            <select id="colaboradorSelect" @bind="selectedColaboradorId" class="form-select">
                                <option value="0">-- Seleccionar Colaborador --</option>
                                @foreach (var colaborador in availableColaboradores.Where(c => c.IsActive))
                                {
                                    <option value="@colaborador.Id">
                                        @colaborador.Nombre (@colaborador.Puesto) - @colaborador.Compania?.Name
                                    </option>
                                }
                            </select>
                        </div>

                        @if (selectedColaboradorId > 0)
                        {
                            var selectedColaborador = availableColaboradores.FirstOrDefault(c => c.Id == selectedColaboradorId);
                            if (selectedColaborador != null)
                            {
                                <div class="alert alert-info">
                                    <h6>Información del Colaborador:</h6>
                                    <p><strong>Nombre:</strong> @selectedColaborador.Nombre</p>
                                    <p><strong>Puesto:</strong> @selectedColaborador.Puesto</p>
                                    <p><strong>Empresa:</strong> @selectedColaborador.Compania?.Name</p>
                                    <p><strong>Email:</strong> @selectedColaborador.Email</p>
                                    <p><strong>Teléfono:</strong> @selectedColaborador.Tel1</p>
                                </div>
                            }
                        }

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                @errorMessage
                            </div>
                        }

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="HideAssignColaboradorModal">Cancelar</button>
                            <button type="button" class="btn btn-primary" @onclick="AssignColaboradorToUser" disabled="@(selectedColaboradorId == 0 || isAssigningColaborador)">
                                @if (isAssigningColaborador)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                }
                                Asignar Colaborador
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<!-- Modal para ver detalles del usuario -->
@if (showViewModal && selectedUserForView != null)
{
    <div class="modal-backdrop show" @onclick="HideViewModal"></div>
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-person-circle me-2"></i>
                        Detalles del Usuario: @selectedUserForView.Username
                    </h5>
                    <button type="button" class="btn-close" @onclick="HideViewModal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <!-- Información Personal -->
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="bi bi-person me-2"></i>
                                        Información Personal
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-3">
                                        <div class="col-sm-4">
                                            <strong>Usuario:</strong>
                                        </div>
                                        <div class="col-sm-8">
                                            <span class="badge bg-primary">@selectedUserForView.Username</span>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-sm-4">
                                            <strong>Email:</strong>
                                        </div>
                                        <div class="col-sm-8">
                                            <a href="mailto:@selectedUserForView.Email" class="text-decoration-none">
                                                @selectedUserForView.Email
                                            </a>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-sm-4">
                                            <strong>Nombre:</strong>
                                        </div>
                                        <div class="col-sm-8">
                                            @selectedUserForView.FullName
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-sm-4">
                                            <strong>Estado:</strong>
                                        </div>
                                        <div class="col-sm-8">
                                            @if (selectedUserForView.IsActive)
                                            {
                                                <span class="badge bg-success">Activo</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Inactivo</span>
                                            }
                                            @if (selectedUserForView.IsLocked)
                                            {
                                                <span class="badge bg-warning ms-1">Bloqueado</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-sm-4">
                                            <strong>Último Login:</strong>
                                        </div>
                                        <div class="col-sm-8">
                                            @if (selectedUserForView.LastLogin.HasValue)
                                            {
                                                <span>@selectedUserForView.LastLogin.Value.ToString("dd/MM/yyyy HH:mm")</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Nunca</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Información del Colaborador -->
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="bi bi-person-badge me-2"></i>
                                        Colaborador Asignado
                                    </h6>
                                </div>
                                <div class="card-body">
                                    @if (selectedUserForView.Colaborador != null)
                                    {
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Nombre:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @selectedUserForView.Colaborador.Nombre
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Puesto:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @selectedUserForView.Colaborador.Puesto
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Identidad:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @selectedUserForView.Colaborador.Identidad
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Email:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <a href="mailto:@selectedUserForView.Colaborador.Email" class="text-decoration-none">
                                                    @selectedUserForView.Colaborador.Email
                                                </a>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Teléfono:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @selectedUserForView.Colaborador.Tel1
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Placa:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @if (!string.IsNullOrEmpty(selectedUserForView.Colaborador.PlacaVehiculo))
                                                {
                                                    <span class="badge bg-info">@selectedUserForView.Colaborador.PlacaVehiculo</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Sin placa</span>
                                                }
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center text-muted py-4">
                                            <i class="bi bi-person-x display-4"></i>
                                            <p class="mt-2">Sin colaborador asignado</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <!-- Información de la Empresa -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="bi bi-building me-2"></i>
                                        Empresa
                                    </h6>
                                </div>
                                <div class="card-body">
                                    @if (selectedUserForView.Colaborador?.Compania != null)
                                    {
                                        var empresa = selectedUserForView.Colaborador.Compania;
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Nombre:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <span class="badge bg-info">@empresa.Name</span>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Descripción:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @empresa.Description
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Sitio:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @if (empresa.Sitio != null)
                                                {
                                                    <span class="badge bg-secondary">@empresa.Sitio.Nombre</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Sin sitio asignado</span>
                                                }
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Zonas de Acceso:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @if (empresa.ZonasAcceso != null && empresa.ZonasAcceso.Any())
                                                {
                                                    <div class="d-flex flex-wrap gap-1">
                                                        @foreach (var zona in empresa.ZonasAcceso)
                                                        {
                                                            <span class="badge bg-light text-dark">@zona.Nombre</span>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Sin zonas asignadas</span>
                                                }
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Visitas:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <span class="badge bg-info">@empresa.VisitsCount</span>
                                            </div>
                                        </div>
                                    }
                                    else if (selectedUserForView.Compania != null)
                                    {
                                        var empresa = selectedUserForView.Compania;
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Nombre:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <span class="badge bg-info">@empresa.Name</span>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Descripción:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @empresa.Description
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Sitio:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @if (empresa.Sitio != null)
                                                {
                                                    <span class="badge bg-secondary">@empresa.Sitio.Nombre</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Sin sitio asignado</span>
                                                }
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Visitas:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                <span class="badge bg-info">@empresa.VisitsCount</span>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center text-muted py-4">
                                            <i class="bi bi-building-x display-4"></i>
                                            <p class="mt-2">Sin empresa asignada</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Centros de Acceso -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="bi bi-geo-alt me-2"></i>
                                        Centros de Acceso
                                    </h6>
                                </div>
                                <div class="card-body">
                                    @if (selectedUserForView.Colaborador?.ColaboradorByCentros != null && selectedUserForView.Colaborador.ColaboradorByCentros.Any())
                                    {
                                        <div class="list-group list-group-flush">
                                            @foreach (var centro in selectedUserForView.Colaborador.ColaboradorByCentros)
                                            {
                                                <div class="list-group-item d-flex justify-content-between align-items-center px-0">
                                                    <div>
                                                        <strong>@centro.Centro?.Nombre</strong>
                                                        <br>
                                                        <small class="text-muted">@centro.Centro?.Localidad</small>
                                                    </div>
                                                    <span class="badge bg-success">Acceso</span>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center text-muted py-4">
                                            <i class="bi bi-geo-alt-x display-4"></i>
                                            <p class="mt-2">Sin centros asignados</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <!-- Roles del Usuario -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="bi bi-shield-check me-2"></i>
                                        Roles Asignados
                                    </h6>
                                </div>
                                <div class="card-body">
                                    @if (selectedUserForView.Roles != null && selectedUserForView.Roles.Any())
                                    {
                                        <div class="d-flex flex-wrap gap-2">
                                            @foreach (var role in selectedUserForView.Roles)
                                            {
                                                <span class="badge bg-primary fs-6">@role.Name</span>
                                            }
                                        </div>
                                        <div class="mt-3">
                                            <small class="text-muted">
                                                <strong>Descripciones:</strong>
                                            </small>
                                            <ul class="list-unstyled mt-2">
                                                @foreach (var role in selectedUserForView.Roles)
                                                {
                                                    <li class="mb-1">
                                                        <strong>@role.Name:</strong> @role.Description
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center text-muted py-4">
                                            <i class="bi bi-shield-x display-4"></i>
                                            <p class="mt-2">Sin roles asignados</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Información de Auditoría -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="bi bi-clock-history me-2"></i>
                                        Información de Auditoría
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-3">
                                        <div class="col-sm-5">
                                            <strong>Fecha de Creación:</strong>
                                        </div>
                                        <div class="col-sm-7">
                                            @selectedUserForView.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-sm-5">
                                            <strong>Última Actualización:</strong>
                                        </div>
                                        <div class="col-sm-7">
                                            @if (selectedUserForView.UpdatedAt.HasValue)
                                            {
                                                <span>@selectedUserForView.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Nunca actualizado</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-sm-5">
                                            <strong>ID del Usuario:</strong>
                                        </div>
                                        <div class="col-sm-7">
                                            <code>@selectedUserForView.Id</code>
                                        </div>
                                    </div>
                                    @if (selectedUserForView.Colaborador != null)
                                    {
                                        <div class="row mb-3">
                                            <div class="col-sm-5">
                                                <strong>ID Colaborador:</strong>
                                            </div>
                                            <div class="col-sm-7">
                                                <code>@selectedUserForView.IdColaborador</code>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideViewModal">
                        <i class="bi bi-x-circle me-2"></i>
                        Cerrar
                    </button>
                    <button type="button" class="btn btn-primary" @onclick="() => { HideViewModal(); ShowEditModal(selectedUserForView); }">
                        <i class="bi bi-pencil me-2"></i>
                        Editar Usuario
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<UserDto> users = new();
    private List<RoleDto> availableRoles = new();
    private bool isLoading = true;
    private bool showModal = false;
    private bool isEditing = false;
    private bool isSaving = false;
    private string errorMessage = string.Empty;
    private RegisterDto currentUser = new();
    private UpdateUserDto currentEditUser = new();
    private List<int> selectedRoleIds = new();
    private int editingUserId = 0;
    private bool showPasswordModal = false;
    private bool isChangingPassword = false;
    private string passwordErrorMessage = string.Empty;
    private ChangePasswordDto changePasswordModel = new();
    private int passwordChangeUserId = 0;
    
    // Variables para asignación de colaboradores
    private bool showAssignColaboradorModal = false;
    private List<ColaboradorDto> availableColaboradores = new();
    private UserDto? selectedUserForColaborador = null;
    private int selectedColaboradorId = 0;
    private bool isAssigningColaborador = false;
    
    // Variables para modal de visualización
    private bool showViewModal = false;
    private UserDto? selectedUserForView = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            isLoading = true;
            users = await UserService.GetAllUsersAsync();
            availableRoles = await UserService.GetRolesAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error cargando datos: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowCreateModal()
    {
        currentUser = new RegisterDto();
        selectedRoleIds = new List<int>();
        isEditing = false;
        showModal = true;
        errorMessage = string.Empty;
    }

    private void ShowViewModal(UserDto user)
    {
        selectedUserForView = user;
        showViewModal = true;
    }

    private void HideViewModal()
    {
        showViewModal = false;
        selectedUserForView = null;
    }

    private void ShowEditModal(UserDto user)
    {
        editingUserId = user.Id;
        currentEditUser = new UpdateUserDto
        {
            Id = user.Id,
            Username = user.Username,
            Email = user.Email,
            FirstName = user.FirstName,
            LastName = user.LastName,
            IsActive = user.IsActive
        };
        selectedRoleIds = user.Roles.Select(r => r.Id).ToList();
        isEditing = true;
        showModal = true;
        errorMessage = string.Empty;
    }

    private void HideModal()
    {
        showModal = false;
        errorMessage = string.Empty;
    }

    private void ToggleRole(int roleId, bool isSelected)
    {
        if (isSelected)
        {
            if (!selectedRoleIds.Contains(roleId))
                selectedRoleIds.Add(roleId);
        }
        else
        {
            selectedRoleIds.Remove(roleId);
        }
    }

    private async Task HandleSave()
    {
        try
        {
            isSaving = true;
            errorMessage = string.Empty;

            if (isEditing)
            {
                if (editingUserId > 0)
                {
                    await UserService.UpdateUserAsync(editingUserId, currentEditUser);
                }
                else
                {
                    errorMessage = "No se pudo encontrar el usuario para actualizar";
                    return;
                }
            }
            else
            {
                if (selectedRoleIds.Count == 0)
                {
                    errorMessage = "Debe seleccionar al menos un rol";
                    return;
                }
                
                currentUser.RoleIds = selectedRoleIds;
                await UserService.CreateUserAsync(currentUser);
            }

            await LoadData();
            HideModal();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error guardando usuario: {ex.Message}";
        }
        finally
        {
            isSaving = false;
        }
    }

    private async Task LockUser(int userId)
    {
        try
        {
            await UserService.LockUserAsync(userId);
            await LoadData();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error bloqueando usuario: {ex.Message}";
        }
    }

    private async Task UnlockUser(int userId)
    {
        try
        {
            await UserService.UnlockUserAsync(userId);
            await LoadData();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error desbloqueando usuario: {ex.Message}";
        }
    }

    private async Task DeleteUser(int userId)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "¿Estás seguro de que quieres eliminar este usuario?");
        if (confirmed)
        {
            try
            {
                await UserService.DeleteUserAsync(userId);
                await LoadData();
            }
            catch (Exception ex)
            {
                errorMessage = $"Error eliminando usuario: {ex.Message}";
            }
        }
    }

    private async Task ShowAssignColaboradorModal(UserDto user)
    {
        selectedUserForColaborador = user;
        selectedColaboradorId = 0;
        showAssignColaboradorModal = true;
        errorMessage = string.Empty;
        
        try
        {
            // Cargar colaboradores disponibles (que no estén asignados a otros usuarios)
            availableColaboradores = await ColaboradorService.GetAllColaboradoresAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error cargando colaboradores: {ex.Message}";
        }
    }

    private void HideAssignColaboradorModal()
    {
        showAssignColaboradorModal = false;
        selectedUserForColaborador = null;
        selectedColaboradorId = 0;
        errorMessage = string.Empty;
    }

    private async Task AssignColaboradorToUser()
    {
        if (selectedUserForColaborador == null || selectedColaboradorId == 0)
        {
            errorMessage = "Debe seleccionar un colaborador";
            return;
        }

        try
        {
            isAssigningColaborador = true;
            errorMessage = string.Empty;

            await UserService.AssignColaboradorToUserAsync(selectedUserForColaborador.Id, selectedColaboradorId);
            await LoadData();
            HideAssignColaboradorModal();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error asignando colaborador: {ex.Message}";
        }
        finally
        {
            isAssigningColaborador = false;
        }
    }

    private async Task RemoveColaboradorFromUser(int userId)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "¿Estás seguro de que quieres remover el colaborador asignado a este usuario?");
        if (confirmed)
        {
            try
            {
                await UserService.RemoveColaboradorFromUserAsync(userId);
                await LoadData();
            }
            catch (Exception ex)
            {
                errorMessage = $"Error removiendo colaborador: {ex.Message}";
            }
        }
    }

    private void ShowChangePasswordModal(UserDto user)
    {
        passwordChangeUserId = user.Id;
        changePasswordModel = new ChangePasswordDto();
        showPasswordModal = true;
        passwordErrorMessage = string.Empty;
    }

    private void HidePasswordModal()
    {
        showPasswordModal = false;
        passwordErrorMessage = string.Empty;
        changePasswordModel = new ChangePasswordDto();
    }

    private async Task HandleChangePassword()
    {
        try
        {
            isChangingPassword = true;
            passwordErrorMessage = string.Empty;

            await UserService.ChangePasswordAsync(passwordChangeUserId, changePasswordModel);
            
            HidePasswordModal();
            await LoadData();
        }
        catch (Exception ex)
        {
            passwordErrorMessage = $"Error cambiando contraseña: {ex.Message}";
        }
        finally
        {
            isChangingPassword = false;
        }
    }
}

</RoleGuard>
