@page "/apitest"
@using Park.Web2.Services
@inject ApiService ApiService

<PageTitle>API Test</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h3" GutterBottom="true">Prueba de Conexión con API</MudText>
    
    <MudGrid>
        <MudItem xs="12" md="6">
            <MudCard Elevation="2">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Estado de Conexión</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    @if (isLoading)
                    {
                        <MudProgressCircular Indeterminate="true" />
                        <MudText Class="mt-2">Probando conexión con el API...</MudText>
                    }
                    else if (connectionStatus != null)
                    {
                        <MudAlert Severity="@(connectionStatus.IsConnected ? Severity.Success : Severity.Error)" Dense="true">
                            <strong>Estado:</strong> @(connectionStatus.IsConnected ? "Conectado" : "Desconectado")
                        </MudAlert>
                        @if (!string.IsNullOrEmpty(connectionStatus.Message))
                        {
                            <MudText Class="mt-2"><strong>Mensaje:</strong> @connectionStatus.Message</MudText>
                        }
                        @if (connectionStatus.IsConnected && !string.IsNullOrEmpty(connectionStatus.ApiVersion))
                        {
                            <MudText Class="mt-2"><strong>Versión del API:</strong> @connectionStatus.ApiVersion</MudText>
                        }
                    }
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" md="6">
            <MudCard Elevation="2">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Información del API</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText><strong>URL Base:</strong> https://localhost:7001</MudText>
                    <MudText><strong>Última prueba:</strong> @lastTestTime</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="TestConnection">Probar Conexión</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private bool isLoading = false;
    private ConnectionStatus? connectionStatus;
    private string lastTestTime = "Nunca";

    protected override async Task OnInitializedAsync()
    {
        await TestConnection();
    }

    private async Task TestConnection()
    {
        isLoading = true;
        lastTestTime = DateTime.Now.ToString("HH:mm:ss");
        
        try
        {
            // Intentar hacer una llamada simple al API
            var result = await ApiService.GetAsync<object>("/api/test");
            connectionStatus = new ConnectionStatus
            {
                IsConnected = true,
                Message = "Conexión exitosa con el API",
                ApiVersion = "1.0"
            };
        }
        catch (Exception ex)
        {
            connectionStatus = new ConnectionStatus
            {
                IsConnected = false,
                Message = $"Error de conexión: {ex.Message}"
            };
        }
        finally
        {
            isLoading = false;
        }
    }

    public class ConnectionStatus
    {
        public bool IsConnected { get; set; }
        public string Message { get; set; } = string.Empty;
        public string ApiVersion { get; set; } = string.Empty;
    }
}
