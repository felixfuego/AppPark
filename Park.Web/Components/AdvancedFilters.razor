<div class="card mb-4">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-filter me-2"></i>
                Filtros Avanzados
            </h5>
            <button class="btn btn-sm btn-outline-secondary" @onclick="ToggleFilters">
                @if (isExpanded)
                {
                    <i class="fas fa-chevron-up me-1"></i>
                    <span>Ocultar</span>
                }
                else
                {
                    <i class="fas fa-chevron-down me-1"></i>
                    <span>Mostrar</span>
                }
            </button>
        </div>
    </div>
    @if (isExpanded)
    {
        <div class="card-body">
            <div class="row">
                @foreach (var filter in Filters)
                {
                    <div class="col-md-@(filter.ColumnSize ?? 3) mb-3">
                        <label for="@filter.Id" class="form-label">@filter.Label</label>
                        @switch (filter.Type)
                        {
                            case FilterType.Text:
                                <input type="text" 
                                       id="@filter.Id" 
                                       class="form-control" 
                                       placeholder="@filter.Placeholder"
                                       @bind="filter.Value" 
                                       @bind:event="oninput" />
                                break;
                            case FilterType.Select:
                                <select id="@filter.Id" class="form-select" @bind="filter.Value">
                                    <option value="">@filter.Placeholder</option>
                                    @if (filter.Options != null)
                                    {
                                        @foreach (var option in filter.Options)
                                        {
                                            <option value="@option.Value">@option.Text</option>
                                        }
                                    }
                                </select>
                                break;
                            case FilterType.Date:
                                <input type="date" 
                                       id="@filter.Id" 
                                       class="form-control" 
                                       @bind="filter.DateValue" />
                                break;
                            case FilterType.DateRange:
                                <div class="input-group">
                                    <input type="date" 
                                           class="form-control" 
                                           @bind="filter.StartDate" />
                                    <span class="input-group-text">a</span>
                                    <input type="date" 
                                           class="form-control" 
                                           @bind="filter.EndDate" />
                                </div>
                                break;
                            case FilterType.Number:
                                <input type="number" 
                                       id="@filter.Id" 
                                       class="form-control" 
                                       placeholder="@filter.Placeholder"
                                       @bind="filter.Value" />
                                break;
                            case FilterType.Checkbox:
                                <div class="form-check">
                                    <input type="checkbox" 
                                           id="@filter.Id" 
                                           class="form-check-input" 
                                           @bind="filter.BoolValue" />
                                    <label class="form-check-label" for="@filter.Id">
                                        @filter.Label
                                    </label>
                                </div>
                                break;
                        }
                    </div>
                }
            </div>
            <div class="d-flex justify-content-end gap-2">
                <button class="btn btn-outline-secondary" @onclick="ClearFilters">
                    <i class="fas fa-times me-2"></i>
                    Limpiar
                </button>
                <button class="btn btn-primary" @onclick="ApplyFilters">
                    <i class="fas fa-search me-2"></i>
                    Aplicar Filtros
                </button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public List<FilterOption> Filters { get; set; } = new();
    [Parameter] public EventCallback<List<FilterOption>> OnFiltersApplied { get; set; }
    [Parameter] public EventCallback OnFiltersCleared { get; set; }

    private bool isExpanded = false;

    private void ToggleFilters()
    {
        isExpanded = !isExpanded;
    }

    private async Task ApplyFilters()
    {
        await OnFiltersApplied.InvokeAsync(Filters);
    }

    private async Task ClearFilters()
    {
        foreach (var filter in Filters)
        {
            filter.Value = string.Empty;
            filter.StartDate = null;
            filter.EndDate = null;
            filter.BoolValue = false;
        }
        await OnFiltersCleared.InvokeAsync();
    }

    public class FilterOption
    {
        public string Id { get; set; } = string.Empty;
        public string Label { get; set; } = string.Empty;
        public string Placeholder { get; set; } = string.Empty;
        public FilterType Type { get; set; }
        public int? ColumnSize { get; set; } = 3;
        public string Value { get; set; } = string.Empty;
        public DateTime? DateValue { get; set; }
        public DateTime? StartDate { get; set; }
        public DateTime? EndDate { get; set; }
        public bool BoolValue { get; set; }
        public List<FilterSelectOption>? Options { get; set; }
    }

    public class FilterSelectOption
    {
        public string Value { get; set; } = string.Empty;
        public string Text { get; set; } = string.Empty;
    }

    public enum FilterType
    {
        Text,
        Select,
        Date,
        DateRange,
        Number,
        Checkbox
    }
}
