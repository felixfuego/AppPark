@using Park.Web.Services
@using Park.Web.Models
@inject IAuthService AuthService
@inject IJSRuntime JSRuntime

<div class="nav-menu">
    <div class="menu-section">
        <h6 class="menu-title">Dashboard</h6>
        <div class="menu-item">
            <a href="/" class="menu-link" @onclick="CloseMobileMenu">
                <i class="fas fa-tachometer-alt"></i>
                <span class="menu-text">Dashboard</span>
            </a>
        </div>
    </div>
@if (AuthService.IsAuthenticated && (isAdmin || isOperacion))
    {
    <div class="menu-section">
        <h6 class="menu-title">Gestión</h6>
        <div class="menu-item">
            <a href="/companies" class="menu-link" @onclick="CloseMobileMenu">
                <i class="fas fa-building"></i>
                <span class="menu-text">Empresas</span>
            </a>
        </div>
        <div class="menu-item">
            <a href="/zones" class="menu-link" @onclick="CloseMobileMenu">
                <i class="fas fa-map-marker-alt"></i>
                <span class="menu-text">Zonas</span>
            </a>
        </div>
        <div class="menu-item">
            <a href="/gates" class="menu-link" @onclick="CloseMobileMenu">
                <i class="fas fa-door-open"></i>
                <span class="menu-text">Puertas</span>
            </a>
        </div>
    </div>
}
    
    <div class="menu-section">
        <h6 class="menu-title">Herramientas</h6>
        @if (AuthService.IsAuthenticated && (isAdmin || isOperacion))
        {
            <div class="menu-item">
                <a href="/visitas" class="menu-link" @onclick="CloseMobileMenu">
                    <i class="fas fa-calendar-check"></i>
                    <span class="menu-text">Visitas</span>
                </a>
            </div>
            <div class="menu-item">
                <a href="/visitors" class="menu-link" @onclick="CloseMobileMenu">
                <i class="fas fa-users"></i>
                <span class="menu-text">Visitantes</span>
            </a>
        </div>
        }
        @if (isGuardia)
        {
            <div class="menu-item">
                <a href="/guardia" class="menu-link" @onclick="CloseMobileMenu">
                    <i class="fas fa-shield-alt"></i>
                    <span class="menu-text">Panel de Guardia</span>
                </a>
            </div>
        }
        <div class="menu-item">
            <a href="/qr-scanner" class="menu-link" @onclick="CloseMobileMenu">
                <i class="fas fa-qrcode"></i>
                <span class="menu-text">Escáner QR</span>
            </a>
        </div>
        <div class="menu-item">
            <a href="/reports" class="menu-link" @onclick="CloseMobileMenu">
                <i class="fas fa-chart-bar"></i>
                <span class="menu-text">Reportes</span>
            </a>
        </div>
    </div>

    @if (AuthService.IsAuthenticated && isAdmin)
    {
        <div class="menu-section">
            <h6 class="menu-title">Administración</h6>
            <div class="menu-item">
                <a href="/usuarios" class="menu-link" @onclick="CloseMobileMenu">
                    <i class="fas fa-user-cog"></i>
                    <span class="menu-text">Usuarios</span>
                </a>
            </div>
            <div class="menu-item">
                <a href="/roles" class="menu-link" @onclick="CloseMobileMenu">
                    <i class="fas fa-user-shield"></i>
                    <span class="menu-text">Roles</span>
                </a>
            </div>

        </div>
    }
</div>

@code {
    private bool isAdmin = false;
    private bool isGuardia = false;
    private bool isOperacion = false;
    private UserInfo? currentUser;

    protected override async Task OnInitializedAsync()
    {
        if (AuthService.IsAuthenticated)
        {
            currentUser = await AuthService.GetCurrentUserAsync();
            isAdmin = currentUser?.Roles.Any(r => r.Name == "Admin") ?? false;
            isGuardia = currentUser?.Roles.Any(r => r.Name == "Guardia") ?? false;
            isOperacion = currentUser?.Roles.Any(r => r.Name == "Operacion") ?? false;
        }
    }

    private async Task CloseMobileMenu()
    {
        // Cerrar el menú móvil al hacer clic en un enlace
        await JSRuntime.InvokeVoidAsync("closeMobileMenu");
    }
}