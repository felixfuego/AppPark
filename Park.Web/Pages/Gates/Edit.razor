@page "/gates/edit/{Id:int}"
@using Park.Web.Models
@using Park.Web.Services
@inject IGateService GateService
@inject IZoneService ZoneService
@inject NavigationManager Navigation
@inject ILogger<Edit> Logger

<AuthorizeView>
    <ChildContent>
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">
                        <i class="fas fa-edit me-2"></i>
                        Editar Puerta
                    </h1>
                    <p class="text-muted">Modifica la información de la puerta</p>
                </div>
                <button class="btn btn-outline-secondary" @onclick="@(() => Navigation.NavigateTo("/gates"))">
                    <i class="fas fa-arrow-left me-2"></i>
                    Volver
                </button>
            </div>

            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p class="mt-2">Cargando información de la puerta...</p>
                </div>
            }
            else if (gate == null)
            {
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    No se pudo cargar la información de la puerta.
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-lg-8">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Información de la Puerta</h5>
                            </div>
                            <div class="card-body">
                                <EditForm Model="gate" OnValidSubmit="HandleValidSubmit">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />

                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="name" class="form-label">Nombre de la Puerta *</label>
                                            <InputText id="name" class="form-control" @bind-Value="gate.Name" />
                                            <ValidationMessage For="@(() => gate.Name)" />
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="zone" class="form-label">Zona *</label>
                                            <InputSelect id="zone" class="form-select" @bind-Value="gate.ZoneId">
                                                <option value="">Seleccionar zona...</option>
                                                @if (zones != null)
                                                {
                                                    @foreach (var zone in zones)
                                                    {
                                                        <option value="@zone.Id">@zone.Name</option>
                                                    }
                                                }
                                            </InputSelect>
                                            <ValidationMessage For="@(() => gate.ZoneId)" />
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label for="description" class="form-label">Descripción</label>
                                        <InputTextArea id="description" class="form-control" rows="3" @bind-Value="gate.Description" />
                                        <ValidationMessage For="@(() => gate.Description)" />
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="gateNumber" class="form-label">Número de Puerta *</label>
                                            <InputText id="gateNumber" class="form-control" @bind-Value="gate.GateNumber" />
                                            <ValidationMessage For="@(() => gate.GateNumber)" />
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="gateType" class="form-label">Tipo de Puerta *</label>
                                            <InputSelect id="gateType" class="form-select" @bind-Value="gate.GateType">
                                                <option value="">Seleccionar tipo...</option>
                                                <option value="Entrada">Entrada</option>
                                                <option value="Salida">Salida</option>
                                                <option value="Mixta">Mixta</option>
                                            </InputSelect>
                                            <ValidationMessage For="@(() => gate.GateType)" />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <div class="form-check">
                                                <InputCheckbox id="isActive" class="form-check-input" @bind-Value="gate.IsActive" />
                                                <label class="form-check-label" for="isActive">
                                                    Puerta Activa
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-end gap-2">
                                        <button type="button" class="btn btn-outline-secondary" @onclick="@(() => Navigation.NavigateTo("/gates"))">
                                            Cancelar
                                        </button>
                                        <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                            @if (isSubmitting)
                                            {
                                                <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                                <span>Guardando...</span>
                                            }
                                            else
                                            {
                                                <i class="fas fa-save me-2"></i>
                                                <span>Guardar Cambios</span>
                                            }
                                        </button>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Información Adicional</h6>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    <strong>Nota:</strong> Los campos marcados con * son obligatorios.
                                </div>
                                
                                <div class="mb-3">
                                    <h6>Tipos de Puerta</h6>
                                    <div class="list-group list-group-flush">
                                        <div class="list-group-item">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-sign-in-alt text-success me-2"></i>
                                                <div>
                                                    <strong>Entrada</strong>
                                                    <br />
                                                    <small class="text-muted">Para acceso al parque</small>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="list-group-item">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-sign-out-alt text-warning me-2"></i>
                                                <div>
                                                    <strong>Salida</strong>
                                                    <br />
                                                    <small class="text-muted">Para salida del parque</small>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="list-group-item">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-exchange-alt text-info me-2"></i>
                                                <div>
                                                    <strong>Mixta</strong>
                                                    <br />
                                                    <small class="text-muted">Para entrada y salida</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @if (zones != null && zones.Any())
                                {
                                    <div class="mb-3">
                                        <h6>Zonas Disponibles</h6>
                                        <div class="list-group list-group-flush">
                                            @foreach (var zone in zones.Take(5))
                                            {
                                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <strong>@zone.Name</strong>
                                                        <br />
                                                        <small class="text-muted">@zone.Description</small>
                                                    </div>
                                                    <span class="badge bg-primary rounded-pill">@zone.GatesCount puertas</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }

                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    <strong>Importante:</strong> Asegúrate de asignar la puerta a la zona correcta.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </ChildContent>
    <NotAuthorized>
        <div class="text-center">
            <h3>Acceso Denegado</h3>
            <p>Debes iniciar sesión para editar puertas.</p>
            <a href="/login" class="btn btn-primary">Iniciar Sesión</a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public int Id { get; set; }

    private UpdateGate gate = new();
    private List<Zone>? zones;
    private bool isLoading = true;
    private bool isSubmitting = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            isLoading = true;
            
            // Cargar puerta y zonas en paralelo
            var gateTask = GateService.GetByIdAsync(Id);
            var zonesTask = ZoneService.GetAllAsync();
            
            await Task.WhenAll(gateTask, zonesTask);
            
            var gateResult = await gateTask;
            var zonesResult = await zonesTask;
            
            if (gateResult != null)
            {
                // Mapear Gate a UpdateGate
                gate = new UpdateGate
                {
                    Name = gateResult.Name,
                    Description = gateResult.Description,
                    GateNumber = gateResult.GateNumber ?? string.Empty,
                    GateType = gateResult.GateType ?? string.Empty,
                    ZoneId = gateResult.ZoneId,
                    IsActive = gateResult.IsActive
                };
            }
            
            zones = zonesResult?.ToList() ?? new List<Zone>();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error al cargar datos para editar puerta {Id}", Id);
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            isSubmitting = true;
            var result = await GateService.UpdateAsync(Id, gate);
            
            if (result != null)
            {
                // TODO: Mostrar mensaje de éxito
                Navigation.NavigateTo("/gates");
            }
            else
            {
                // TODO: Mostrar mensaje de error
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error al actualizar puerta {Id}", Id);
            // TODO: Mostrar mensaje de error
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
