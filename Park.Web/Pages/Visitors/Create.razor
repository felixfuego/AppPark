@page "/visitors/create"
@using Park.Web.Models
@using Park.Web.Services
@inject IVisitorService VisitorService
@inject ICompanyService CompanyService
@inject NavigationManager Navigation
@inject ILogger<Create> Logger

<AuthorizeView>
    <ChildContent>
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">
                        <i class="fas fa-plus me-2"></i>
                        Nuevo Visitante
                    </h1>
                    <p class="text-muted">Registra un nuevo visitante en el parque industrial</p>
                </div>
                <button class="btn btn-outline-secondary" @onclick="@(() => Navigation.NavigateTo("/visitors"))">
                    <i class="fas fa-arrow-left me-2"></i>
                    Volver
                </button>
            </div>

            <div class="row">
                <div class="col-lg-8">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Información del Visitante</h5>
                        </div>
                        <div class="card-body">
                            <EditForm Model="visitor" OnValidSubmit="HandleValidSubmit">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="firstName" class="form-label">Nombre *</label>
                                        <InputText id="firstName" class="form-control" @bind-Value="visitor.FirstName" />
                                        <ValidationMessage For="@(() => visitor.FirstName)" />
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="lastName" class="form-label">Apellido *</label>
                                        <InputText id="lastName" class="form-control" @bind-Value="visitor.LastName" />
                                        <ValidationMessage For="@(() => visitor.LastName)" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="documentType" class="form-label">Tipo de Documento *</label>
                                        <InputSelect id="documentType" class="form-select" @bind-Value="visitor.DocumentType">
                                            <option value="">Seleccionar tipo...</option>
                                            <option value="DNI">DNI</option>
                                            <option value="CE">Carné de Extranjería</option>
                                            <option value="PASSPORT">Pasaporte</option>
                                            <option value="RUC">RUC</option>
                                            <option value="OTHER">Otro</option>
                                        </InputSelect>
                                        <ValidationMessage For="@(() => visitor.DocumentType)" />
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="documentNumber" class="form-label">Número de Documento *</label>
                                        <InputText id="documentNumber" class="form-control" @bind-Value="visitor.DocumentNumber" />
                                        <ValidationMessage For="@(() => visitor.DocumentNumber)" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="nationality" class="form-label">Nacionalidad</label>
                                        <InputText id="nationality" class="form-control" @bind-Value="visitor.Nationality" />
                                        <ValidationMessage For="@(() => visitor.Nationality)" />
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="birthDate" class="form-label">Fecha de Nacimiento</label>
                                        <InputDate id="birthDate" class="form-control" @bind-Value="visitor.BirthDate" />
                                        <ValidationMessage For="@(() => visitor.BirthDate)" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="phone" class="form-label">Teléfono</label>
                                        <InputText id="phone" class="form-control" @bind-Value="visitor.Phone" />
                                        <ValidationMessage For="@(() => visitor.Phone)" />
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <InputText id="email" class="form-control" @bind-Value="visitor.Email" />
                                        <ValidationMessage For="@(() => visitor.Email)" />
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="company" class="form-label">Empresa</label>
                                    <InputText id="company" class="form-control" @bind-Value="visitor.Company" />
                                    <ValidationMessage For="@(() => visitor.Company)" />
                                </div>

                                <div class="mb-3">
                                    <label for="address" class="form-label">Dirección</label>
                                    <InputTextArea id="address" class="form-control" rows="3" @bind-Value="visitor.Address" />
                                    <ValidationMessage For="@(() => visitor.Address)" />
                                </div>

                                <div class="mb-3">
                                    <div class="form-check">
                                        <InputCheckbox id="isActive" class="form-check-input" @bind-Value="visitor.IsActive" />
                                        <label class="form-check-label" for="isActive">
                                            Visitante Activo
                                        </label>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-end gap-2">
                                    <button type="button" class="btn btn-outline-secondary" @onclick="@(() => Navigation.NavigateTo("/visitors"))">
                                        Cancelar
                                    </button>
                                    <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                        @if (isSubmitting)
                                        {
                                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                            <span>Guardando...</span>
                                        }
                                        else
                                        {
                                            <i class="fas fa-save me-2"></i>
                                            <span>Guardar Visitante</span>
                                        }
                                    </button>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="mb-0">Información Adicional</h6>
                        </div>
                        <div class="card-body">
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>
                                <strong>Nota:</strong> Los campos marcados con * son obligatorios.
                            </div>
                            
                            <div class="mb-3">
                                <h6>Tipos de Documento</h6>
                                <div class="list-group list-group-flush">
                                    <div class="list-group-item">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-id-card text-primary me-2"></i>
                                            <div>
                                                <strong>DNI</strong>
                                                <br />
                                                <small class="text-muted">Documento Nacional de Identidad</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="list-group-item">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-passport text-success me-2"></i>
                                            <div>
                                                <strong>CE</strong>
                                                <br />
                                                <small class="text-muted">Carné de Extranjería</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="list-group-item">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-globe text-warning me-2"></i>
                                            <div>
                                                <strong>Pasaporte</strong>
                                                <br />
                                                <small class="text-muted">Documento de viaje internacional</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (companies != null && companies.Any())
                            {
                                <div class="mb-3">
                                    <h6>Empresas Registradas</h6>
                                    <div class="list-group list-group-flush">
                                        @foreach (var company in companies.Take(5))
                                        {
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <div>
                                                    <strong>@company.Name</strong>
                                                    <br />
                                                    <small class="text-muted">@company.Zone.Name</small>
                                                </div>
                                                <span class="badge bg-primary rounded-pill">@company.VisitsCount visitas</span>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }

                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                <strong>Importante:</strong> Una vez registrado, el visitante podrá realizar visitas al parque.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </ChildContent>
    <NotAuthorized>
        <div class="text-center">
            <h3>Acceso Denegado</h3>
            <p>Debes iniciar sesión para crear visitantes.</p>
            <a href="/login" class="btn btn-primary">Iniciar Sesión</a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private CreateVisitor visitor = new();
    private List<Company>? companies;
    private bool isSubmitting = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadCompanies();
    }

    private async Task LoadCompanies()
    {
        try
        {
            var result = await CompanyService.GetAllAsync();
            companies = result?.ToList() ?? new List<Company>();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error al cargar empresas");
            companies = new List<Company>();
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            isSubmitting = true;
            var result = await VisitorService.CreateAsync(visitor);
            
            if (result != null)
            {
                // TODO: Mostrar mensaje de éxito
                Navigation.NavigateTo("/visitors");
            }
            else
            {
                // TODO: Mostrar mensaje de error
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error al crear visitante");
            // TODO: Mostrar mensaje de error
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
