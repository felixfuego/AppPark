@page "/usuarios/asignaciones-empresas"
@using Park.Web.Models
@using Park.Web.Services
@inject IUserService UserService
@inject ICompanyService CompanyService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject ILogger<CompanyAssignments> Logger

<AuthorizeView Roles="Admin,Manager">
    <ChildContent>
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">
                        <i class="fas fa-users-cog me-2"></i>
                        Gestión de Asignaciones Usuario-Empresa
                    </h1>
                    <p class="text-muted">Administra las asignaciones de usuarios a empresas del parque industrial</p>
                </div>
                <button class="btn btn-outline-secondary" @onclick="@(() => Navigation.NavigateTo("/usuarios"))">
                    <i class="fas fa-arrow-left me-2"></i>
                    Volver a Usuarios
                </button>
            </div>

            @if (isLoading)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p class="mt-2">Cargando asignaciones...</p>
                </div>
            }
            else
            {
                <!-- Filtros -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-filter me-2"></i>
                            Filtros
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <label for="userFilter" class="form-label">Usuario</label>
                                <input type="text" id="userFilter" class="form-control" 
                                       placeholder="Buscar por nombre de usuario..." 
                                       @bind="userFilter" @bind:event="oninput" />
                            </div>
                            <div class="col-md-6">
                                <label for="companyFilter" class="form-label">Empresa</label>
                                <input type="text" id="companyFilter" class="form-control" 
                                       placeholder="Buscar por nombre de empresa..." 
                                       @bind="companyFilter" @bind:event="oninput" />
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Estadísticas -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card bg-primary text-white">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h4 class="mb-0">@totalAssignments</h4>
                                        <small>Total Asignaciones</small>
                                    </div>
                                    <div class="align-self-center">
                                        <i class="fas fa-users fa-2x"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-success text-white">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h4 class="mb-0">@activeUsers</h4>
                                        <small>Usuarios Activos</small>
                                    </div>
                                    <div class="align-self-center">
                                        <i class="fas fa-user-check fa-2x"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-info text-white">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h4 class="mb-0">@totalCompanies</h4>
                                        <small>Empresas</small>
                                    </div>
                                    <div class="align-self-center">
                                        <i class="fas fa-building fa-2x"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-warning text-white">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h4 class="mb-0">@usersWithAssignments</h4>
                                        <small>Usuarios Asignados</small>
                                    </div>
                                    <div class="align-self-center">
                                        <i class="fas fa-user-tag fa-2x"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Tabla de Asignaciones -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-table me-2"></i>
                            Asignaciones (@filteredAssignments.Count())
                        </h6>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Usuario</th>
                                        <th>Empresa</th>
                                        <th>Zona</th>
                                        <th>Estado</th>
                                        <th>Fecha Asignación</th>
                                        <th>Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var assignment in filteredAssignments)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-sm bg-primary rounded-circle d-flex align-items-center justify-content-center me-2">
                                                        <span class="text-white fw-bold">@assignment.UserName.Substring(0, 1).ToUpper()</span>
                                                    </div>
                                                    <div>
                                                        <strong>@assignment.UserName</strong>
                                                        <br />
                                                        <small class="text-muted">@assignment.UserEmail</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <strong>@assignment.CompanyName</strong>
                                                <br />
                                                <small class="text-muted">@assignment.CompanyDescription</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@assignment.ZoneName</span>
                                            </td>
                                            <td>
                                                @if (assignment.IsActive)
                                                {
                                                    <span class="badge bg-success">Activa</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">Inactiva</span>
                                                }
                                            </td>
                                            <td>
                                                <small>@assignment.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-sm btn-outline-primary" 
                                                            @onclick="@(() => Navigation.NavigateTo($"/usuarios/{assignment.UserId}"))"
                                                            title="Ver usuario">
                                                        <i class="fas fa-user"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-info" 
                                                            @onclick="@(() => Navigation.NavigateTo($"/companies/{assignment.CompanyId}"))"
                                                            title="Ver empresa">
                                                        <i class="fas fa-building"></i>
                                                    </button>
                                                    @if (assignment.IsActive)
                                                    {
                                                        <button class="btn btn-sm btn-outline-danger" 
                                                                @onclick="@(() => RemoveAssignment(assignment.UserId, assignment.CompanyId))"
                                                                title="Remover asignación">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                @if (!filteredAssignments.Any())
                {
                    <div class="text-center py-5">
                        <i class="fas fa-users-slash fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No hay asignaciones</h5>
                        <p class="text-muted">No se encontraron asignaciones de usuarios a empresas con los filtros aplicados.</p>
                    </div>
                }
            }
        </div>
    </ChildContent>
    <NotAuthorized>
        <div class="text-center">
            <h3>Acceso Denegado</h3>
            <p>No tienes permisos para acceder a la gestión de asignaciones.</p>
            <a href="/usuarios" class="btn btn-primary">Volver a Usuarios</a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<UserCompanyAssignment> allAssignments = new();
    private bool isLoading = true;
    private string userFilter = string.Empty;
    private string companyFilter = string.Empty;

    private IEnumerable<UserCompanyAssignment> filteredAssignments => allAssignments
        .Where(a => string.IsNullOrEmpty(userFilter) || 
                   a.UserName.Contains(userFilter, StringComparison.OrdinalIgnoreCase) ||
                   a.UserEmail.Contains(userFilter, StringComparison.OrdinalIgnoreCase))
        .Where(a => string.IsNullOrEmpty(companyFilter) || 
                   a.CompanyName.Contains(companyFilter, StringComparison.OrdinalIgnoreCase))
        .OrderBy(a => a.UserName)
        .ThenBy(a => a.CompanyName);

    private int totalAssignments => allAssignments.Count;
    private int activeUsers => allAssignments.Select(a => a.UserId).Distinct().Count();
    private int totalCompanies => allAssignments.Select(a => a.CompanyId).Distinct().Count();
    private int usersWithAssignments => allAssignments.Select(a => a.UserId).Distinct().Count();

    protected override async Task OnInitializedAsync()
    {
        await LoadAssignments();
    }

    private async Task LoadAssignments()
    {
        try
        {
            isLoading = true;
            
            // Cargar todos los usuarios y sus empresas asignadas
            var users = await UserService.GetAllUsersAsync();
            allAssignments = new List<UserCompanyAssignment>();

            foreach (var user in users)
            {
                var userCompanies = await UserService.GetUserCompaniesAsync(user.Id);
                foreach (var company in userCompanies)
                {
                    allAssignments.Add(new UserCompanyAssignment
                    {
                        Id = 0, // No tenemos el ID de la asignación específica
                        UserId = user.Id,
                        CompanyId = company.Id,
                        UserName = user.FullName,
                        UserEmail = user.Email,
                        CompanyName = company.Name,
                        CompanyDescription = company.Description ?? "",
                        ZoneName = company.Zone?.Name ?? "Sin zona",
                        IsActive = company.IsActive,
                        CreatedAt = company.CreatedAt
                    });
                }
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error al cargar asignaciones");
            allAssignments = new List<UserCompanyAssignment>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task RemoveAssignment(int userId, int companyId)
    {
        if (!await JSRuntime.InvokeAsync<bool>("confirm", "¿Estás seguro de que quieres remover esta asignación?"))
        {
            return;
        }

        try
        {
            var success = await UserService.RemoveUserFromCompanyAsync(userId, companyId);
            
            if (success)
            {
                await LoadAssignments(); // Recargar datos
                await JSRuntime.InvokeVoidAsync("alert", "Asignación removida correctamente");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "Error al remover asignación");
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error al remover asignación de usuario {UserId} de empresa {CompanyId}", userId, companyId);
            await JSRuntime.InvokeVoidAsync("alert", "Error al remover asignación: " + ex.Message);
        }
    }
} 