@page "/usuarios/{Id:int}"
@using Park.Web.Services
@using Park.Comun.DTOs
@using Park.Web.Shared
@inject IUserService UserService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Detalles del Usuario</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-user me-2"></i>
                        Detalles del Usuario
                    </h5>
                    <div>
                        <button class="btn btn-warning me-2" @onclick="@(() => Navigation.NavigateTo($"/usuarios/{Id}/editar"))">
                            <i class="fas fa-edit me-2"></i>
                            Editar
                        </button>
                        <button class="btn btn-secondary" @onclick="@(() => Navigation.NavigateTo("/usuarios"))">
                            <i class="fas fa-arrow-left me-2"></i>
                            Volver
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @if (loading)
                    {
                        <div class="text-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Cargando...</span>
                            </div>
                        </div>
                    }
                    else if (user != null)
                    {
                        <div class="row">
                            <!-- Información Personal -->
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="mb-0">
                                            <i class="fas fa-user me-2"></i>
                                            Información Personal
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>ID:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @user.Id
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Nombre de Usuario:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @user.Username
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Email:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @user.Email
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Nombre Completo:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @user.FullName
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Estado:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @if (user.IsActive)
                                                {
                                                    <span class="badge bg-success">Activo</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">Inactivo</span>
                                                }
                                                @if (user.IsLocked)
                                                {
                                                    <span class="badge bg-warning ms-1">Bloqueado</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Información de Sistema -->
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="mb-0">
                                            <i class="fas fa-clock me-2"></i>
                                            Información de Sistema
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Fecha de Creación:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @user.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Última Actualización:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @if (user.UpdatedAt.HasValue)
                                                {
                                                    @user.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No actualizado</span>
                                                }
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-4">
                                                <strong>Último Login:</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @if (user.LastLogin.HasValue)
                                                {
                                                    @user.LastLogin.Value.ToString("dd/MM/yyyy HH:mm")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Nunca</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-4">
                            <!-- Roles Asignados -->
                            <div class="col-md-4">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="mb-0">
                                            <i class="fas fa-user-shield me-2"></i>
                                            Roles Asignados
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        @if (user.Roles.Any())
                                        {
                                            @foreach (var role in user.Roles)
                                            {
                                                <div class="d-flex justify-content-between align-items-center mb-2">
                                                    <span class="badge bg-primary">@role.Name</span>
                                                    <small class="text-muted">@role.Description</small>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <p class="text-muted mb-0">No hay roles asignados</p>
                                        }
                                    </div>
                                </div>
                            </div>

                            <!-- Empresas Asignadas -->
                            <div class="col-md-4">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0">
                                            <i class="fas fa-building me-2"></i>
                                            Empresas Asignadas
                                        </h6>
                                        <button class="btn btn-sm btn-outline-primary" @onclick="ShowCompanyAssignmentModal">
                                            <i class="fas fa-plus me-1"></i>
                                            Gestionar
                                        </button>
                                    </div>
                                    <div class="card-body">
                                        @if (user.AssignedCompanies.Any())
                                        {
                                            <div class="list-group list-group-flush">
                                                @foreach (var company in user.AssignedCompanies)
                                                {
                                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <strong>@company.Name</strong>
                                                            <br />
                                                            <small class="text-muted">@company.Zone.Name</small>
                                                        </div>
                                                        <span class="badge bg-success">Asignado</span>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <p class="text-muted text-center mb-0">
                                                <i class="fas fa-info-circle me-2"></i>
                                                No hay empresas asignadas
                                            </p>
                                        }
                                    </div>
                                </div>
                            </div>

                            <!-- Zonas Asignadas -->
                            <div class="col-md-4">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0">
                                            <i class="fas fa-map-marker-alt me-2"></i>
                                            Zonas Asignadas
                                        </h6>
                                        <button class="btn btn-sm btn-outline-primary" @onclick="ShowZoneAssignmentModal">
                                            <i class="fas fa-plus me-1"></i>
                                            Gestionar
                                        </button>
                                    </div>
                                    <div class="card-body">
                                        @if (user.AssignedZones.Any())
                                        {
                                            <div class="list-group list-group-flush">
                                                @foreach (var zone in user.AssignedZones)
                                                {
                                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <strong>@zone.Name</strong>
                                                            <br />
                                                            <small class="text-muted">@zone.Description</small>
                                                        </div>
                                                        <span class="badge bg-info">Asignado</span>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <p class="text-muted text-center mb-0">
                                                <i class="fas fa-info-circle me-2"></i>
                                                No hay zonas asignadas
                                            </p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Acciones -->
                        <div class="row mt-4">
                            <div class="col-12">
                                <div class="card">
                                    <div class="card-header">
                                        <h6 class="mb-0">
                                            <i class="fas fa-cogs me-2"></i>
                                            Acciones
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="d-flex gap-2 flex-wrap">
                                            <button class="btn btn-outline-primary" @onclick="@(() => Navigation.NavigateTo($"/usuarios/{Id}/cambiar-password"))">
                                                <i class="fas fa-key me-2"></i>
                                                Cambiar Contraseña
                                            </button>
                                            @if (user.IsActive)
                                            {
                                                <button class="btn btn-outline-danger" @onclick="DeactivateUser">
                                                    <i class="fas fa-user-times me-2"></i>
                                                    Desactivar Usuario
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-outline-success" @onclick="ActivateUser">
                                                    <i class="fas fa-user-check me-2"></i>
                                                    Activar Usuario
                                                </button>
                                            }
                                            @if (user.IsLocked)
                                            {
                                                <button class="btn btn-outline-info" @onclick="UnlockUser">
                                                    <i class="fas fa-unlock me-2"></i>
                                                    Desbloquear Usuario
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-outline-warning" @onclick="LockUser">
                                                    <i class="fas fa-lock me-2"></i>
                                                    Bloquear Usuario
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-user-slash fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Usuario no encontrado</h5>
                            <p class="text-muted">El usuario con ID @Id no existe o no se pudo cargar.</p>
                            <button class="btn btn-primary" @onclick="@(() => Navigation.NavigateTo("/usuarios"))">
                                <i class="fas fa-arrow-left me-2"></i>
                                Volver al Listado
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal para gestión de empresas -->
<UserCompanyAssignmentModal 
    IsVisible="showCompanyModal" 
    UserId="Id" 
    UserFullName="@(user?.FullName ?? "")" 
    OnClose="CloseCompanyModal" />

<!-- Modal para gestión de zonas -->
<UserZoneAssignmentModal 
    IsVisible="showZoneModal" 
    UserId="Id" 
    UserFullName="@(user?.FullName ?? "")" 
    OnClose="CloseZoneModal" />

@code {
    [Parameter]
    public int Id { get; set; }

    private UserDto? user;
    private bool loading = true;
    private bool showCompanyModal = false;
    private bool showZoneModal = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadUser();
    }

    private async Task LoadUser()
    {
        loading = true;
        try
        {
            user = await UserService.GetUserByIdAsync(Id);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "Error loading user:", ex.Message);
        }
        finally
        {
            loading = false;
        }
    }

    private void ShowCompanyAssignmentModal()
    {
        showCompanyModal = true;
    }

    private async Task CloseCompanyModal()
    {
        showCompanyModal = false;
        // Recargar datos del usuario para actualizar las empresas asignadas
        await LoadUser();
    }

    private void ShowZoneAssignmentModal()
    {
        showZoneModal = true;
    }

    private async Task CloseZoneModal()
    {
        showZoneModal = false;
        // Recargar datos del usuario para actualizar las zonas asignadas
        await LoadUser();
    }

    private async Task ActivateUser()
    {
        if (user == null) return;

        try
        {
            var editModel = new UserDto
            {
                Id = user.Id,
                Username = user.Username,
                Email = user.Email,
                FirstName = user.FirstName,
                LastName = user.LastName,
                Roles = user.Roles,
                IsActive = true
            };

            await UserService.UpdateUserAsync(Id, editModel);
            await LoadUser();
            await JSRuntime.InvokeVoidAsync("alert", "Usuario activado exitosamente");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error al activar usuario: {ex.Message}");
        }
    }

    private async Task DeactivateUser()
    {
        if (user == null) return;

        try
        {
            var editModel = new UserDto
            {
                Id = user.Id,
                Username = user.Username,
                Email = user.Email,
                FirstName = user.FirstName,
                LastName = user.LastName,
                Roles = user.Roles,
                IsActive = false
            };

            await UserService.UpdateUserAsync(Id, editModel);
            await LoadUser();
            await JSRuntime.InvokeVoidAsync("alert", "Usuario desactivado exitosamente");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error al desactivar usuario: {ex.Message}");
        }
    }

    private async Task LockUser()
    {
        try
        {
            await UserService.LockUserAsync(Id);
            await LoadUser();
            await JSRuntime.InvokeVoidAsync("alert", "Usuario bloqueado exitosamente");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error al bloquear usuario: {ex.Message}");
        }
    }

    private async Task UnlockUser()
    {
        try
        {
            await UserService.UnlockUserAsync(Id);
            await LoadUser();
            await JSRuntime.InvokeVoidAsync("alert", "Usuario desbloqueado exitosamente");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error al desbloquear usuario: {ex.Message}");
        }
    }
}
