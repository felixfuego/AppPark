@page "/"
@using Park.Web.Services
@using Park.Web.Models
@inject IAuthService AuthService
@inject ICompanyService CompanyService
@inject IZoneService ZoneService
@inject IVisitService VisitService
@inject IGateService GateService
@inject NavigationManager Navigation
@inject ILogger<Dashboard> Logger

<AuthorizeView>
    <ChildContent>
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h1 class="h3 mb-0">Dashboard</h1>
                        <div class="text-muted">
                            <small>Bienvenido, @currentUser?.FullName</small>
                        </div>
                    </div>
                </div>
            </div>

            @if (isLoading)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p class="mt-3 text-muted">Cargando estadísticas...</p>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card border-left-primary shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                        Empresas
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">@totalCompanies</div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-building fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card border-left-success shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                        Zonas
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">@totalZones</div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-map-marker-alt fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card border-left-info shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                        Visitas Hoy
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">@todayVisits</div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-calendar-check fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-4">
                    <div class="card border-left-warning shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                        Puertas Activas
                                    </div>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800">@activeGates</div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-door-open fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Información del Usuario</h6>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <strong>Usuario:</strong> @currentUser?.Username
                            </div>
                            <div class="mb-3">
                                <strong>Email:</strong> @currentUser?.Email
                            </div>
                            <div class="mb-3">
                                <strong>Nombre:</strong> @currentUser?.FullName
                            </div>
                            <div class="mb-3">
                                <strong>Roles:</strong>
                                @if (currentUser?.Roles != null)
                                {
                                    @foreach (var role in currentUser.Roles)
                                    {
                                        <span class="badge bg-primary me-1">@role.Name</span>
                                    }
                                }
                            </div>
                            <div class="mb-3">
                                <strong>Último Login:</strong> @(currentUser?.LastLogin?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Actividad Reciente</h6>
                        </div>
                        <div class="card-body">
                            <div class="list-group list-group-flush">
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <div class="fw-bold">Nueva visita registrada</div>
                                        <small class="text-muted">Empresa ABC - Zona Norte</small>
                                    </div>
                                    <small class="text-muted">Hace 5 min</small>
                                </div>
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <div class="fw-bold">Puerta activada</div>
                                        <small class="text-muted">Puerta Principal - Entrada</small>
                                    </div>
                                    <small class="text-muted">Hace 12 min</small>
                                </div>
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <div class="fw-bold">Nuevo visitante registrado</div>
                                        <small class="text-muted">Juan Pérez - Empresa XYZ</small>
                                    </div>
                                    <small class="text-muted">Hace 25 min</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
    </ChildContent>
    <NotAuthorized>
        <div class="text-center">
            <h3>Acceso Denegado</h3>
            <p>Debes iniciar sesión para acceder al dashboard.</p>
            <a href="/login" class="btn btn-primary">Iniciar Sesión</a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private UserInfo? currentUser;
    private int totalCompanies = 0;
    private int totalZones = 0;
    private int todayVisits = 0;
    private int activeGates = 0;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthService.GetCurrentUserAsync();
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        try
        {
            isLoading = true;
            
            // Cargar estadísticas en paralelo
            var companiesTask = CompanyService.GetAllAsync();
            var zonesTask = ZoneService.GetAllAsync();
            var visitsTask = VisitService.GetAllAsync();
            var gatesTask = GateService.GetAllAsync();

            await Task.WhenAll(companiesTask, zonesTask, visitsTask, gatesTask);

            // Procesar resultados
            var companies = companiesTask.Result?.ToList() ?? new List<Company>();
            var zones = zonesTask.Result?.ToList() ?? new List<Zone>();
            var visits = visitsTask.Result?.ToList() ?? new List<Visit>();
            var gates = gatesTask.Result?.ToList() ?? new List<Gate>();

            // Calcular estadísticas
            totalCompanies = companies.Count;
            totalZones = zones.Count;
            
            // Visitas de hoy
            var today = DateTime.Today;
            todayVisits = visits.Count(v => v.ScheduledDate.Date == today);
            
            // Puertas activas (asumiendo que todas están activas por defecto)
            activeGates = gates.Count;

            Logger.LogInformation("Dashboard cargado: {Companies} empresas, {Zones} zonas, {Visits} visitas hoy, {Gates} puertas activas", 
                totalCompanies, totalZones, todayVisits, activeGates);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error al cargar datos del dashboard");
            // Mantener valores por defecto en caso de error
        }
        finally
        {
            isLoading = false;
        }
    }
}
